[{"content":"A.程式說明 本文章將依序講述如何使用Python爬蟲爬取巴哈姆特排行榜的表格內容，其中包含板塊名稱、板塊id、熱度、文章數量、排名等等，程式碼會於最後一併附上供參考。\nB.使用及安裝套件 Requests套件：[doc] [GitHub]\npip install requests BeautifulSoup套件：[doc] [來源]\npip install beautifulsoup4 pandas套件：[doc] [GitHub]\npip install pandas C.流程 以巴哈姆特手機遊戲排行榜為範例： 在用爬蟲爬取網站資料時，要先觀察表格的載入方式，本次以縮圖模式下觀察網頁的變化及排行榜的載入方式，並透過瀏覽的DevTools找出並觀察Ajax請求網址的變化，依照所需的排名數量取得JSON格式的檔案資料。\n第一步：首先確認網站robot.txt文件中對於爬蟲的規範 此文件通常會在網站的根目錄中(www.example.com/robots.txt)。以巴哈姆特網站為例，可以前往https://forum.gamer.com.tw/robots.txt 參考規範。實際前往該網頁可以看到下圖內容，會發現沒有限制到我們要爬取的排行榜。\n第二步：定義headers變數 為了模擬成我們平常在使用的瀏覽器訪問該網站，通常需要定義此變數，可以避免掉有些反爬蟲的網站禁止我們的訪問。\nheaders = { \u0026quot;User-Agent\u0026quot;: \u0026quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36\u0026quot; } 第三步：觀察手機遊戲排行榜如何載入 一般情況下瀏覽該網站會發現，越是往下瀏覽就能夠看到越多的排名。於是先透過對網頁點擊滑鼠右鍵\u0026gt;檢查網頁原始碼的方式於原始碼內搜尋榜上第一名遊戲的名稱、昨日人氣、版主等資訊，會發現查詢找不到該內容，因此可以推測該資料是透過動態載入的方式顯示於網頁上。且經過更詳細的觀察可以發現，排名是透過瀑布式的載入方式，以每30筆為一個單位出現於網站上。\n我們將使用 開發人員工具(DevTools) 開始獲取我們的資料。首先重新整理當前頁面並按下 F12 / 右鍵\u0026gt;檢查 打開瀏覽器的DevTools，於上排選取 Network\u0026gt;Fetch/XHR ，此時會發現尚未有任何資料載入。\n再來將網頁透過滾輪繼續往下瀏覽，當瀏覽的名次超過第30筆時會發現有第一筆資料開始產生，之後每30名會再產生一筆資料。點選 該筆資料名稱\u0026gt;Preview 並經過展開後會發現稍早搜尋不到的訊息都已經顯示右側，其中英文所對應的資料分別是：\nID 對應中文名稱 Article 昨日文章 hot 昨日熱度 msg 顯示於排行榜標題的文章 ranking 排名 title 標題名稱（遊戲名稱） udclass 排名上升或下降 userid 版主id welcome 進版圖 最後再透過選取 Header 即可找到我們所需要訪問的網址。\n接著發出請求確認伺服器是否能夠正確回傳結果，若是才繼續進行後續步驟。\ndef get_reply_info_list(url): \u0026quot;\u0026quot;\u0026quot;爬取排行榜\u0026quot;\u0026quot;\u0026quot; r = requests.get(url, headers=headers) if r.status_code != requests.codes.ok: print(\u0026quot;載入失敗\u0026quot;) return {} 緊接著開始爬取手機遊戲排行榜\n爬取當前網址所能獲取的資料也僅有前30筆，因此在此情況下無法觀察到網頁的變化。\n較理想觀察變化方式是點進清單模式，此模式下有頁面選擇按鈕可以點選。可以觀察到以下網址在不同頁面時只有page的部分有變化，因此就可以透過迴圈或指定的方式爬取所需要的資料。\n第一頁：https://forum.gamer.com.tw/index.php?page=1\u0026amp;c=94\n第二頁：https://forum.gamer.com.tw/index.php?page=2\u0026amp;c=94\n爬取其他排行榜： 透過觀察以下網址也可以發現不同分類的遊戲網址變化\n手機： https://forum.gamer.com.tw/index.php?page=1\u0026c=94\nPC： https://forum.gamer.com.tw/index.php?page=1\u0026c=500\nTV掌機： https://forum.gamer.com.tw/index.php?page=1\u0026c=52\nD.程式碼分享 import requests from bs4 import BeautifulSoup import pandas as pd import datetime headers = { \u0026quot;User-Agent\u0026quot;: \u0026quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36\u0026quot; } mobile = \u0026quot;https://forum.gamer.com.tw/ajax/rank.php?c=94\u0026amp;page=\u0026quot; pc = \u0026quot;https://forum.gamer.com.tw/ajax/rank.php?c=500\u0026amp;page=\u0026quot; tv = \u0026quot;https://forum.gamer.com.tw/ajax/rank.php?c=52\u0026amp;page=\u0026quot; r_list = [mobile, pc, tv] r_name = ['mobile', 'pc', 'tv'] def get_ranking_info_list(url): \u0026quot;\u0026quot;\u0026quot;取得排名列表\u0026quot;\u0026quot;\u0026quot; rankings = [] for page in range(1, 5): website = url + str(page) r = requests.get(website, headers=headers) rankings_duct = r.json() for value in rankings_duct: rankings.append( { '板塊名稱': value.get('title'), '板塊id': value.get('bsn'), '熱度': value.get('hot'), '文章數量': value.get('article'), '排名': value.get('ranking'), '日期': datetime.date.today(), } ) return rankings num = 0 for item in r_list: df = pd.DataFrame(get_ranking_info_list(item)) df['類別'] = r_name[num] df.to_csv(r_name[num] ,index=False, mode='a') num += 1 ","date":"2022-09-05T00:00:00+02:00","image":"https://pikao777.github.io/cover.JPG","permalink":"https://pikao777.github.io/posts/01/","title":"Python爬蟲-巴哈姆特遊戲排行榜(Draft)"}]